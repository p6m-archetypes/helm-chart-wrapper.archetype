name: Main

on:
  push:
    branches: ["main"]
  pull_request: {}
  workflow_dispatch: {}

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Artifactory Docker Repository
        uses: docker/login-action@v2
        with:
          registry: p6m.jfrog.io
          username: ${{ "{{ vars.ARTIFACTORY_USERNAME }}" }}
          password: ${{ "{{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}" }}

      - name: Helm build dependencies
        run: |
          # Because update does not require a `helm repo add`
          helm dependency update

      - name: Helm Smoke (Test)
        run: |
          set -o pipefail
          helm template --debug {{ project-name }} . | yq --colors

      - name: Helm Package
        run: helm package .

      - name: Get Current Version
        id: current_version
        run: |
          VERSION=$(cat Chart.yaml | grep -e "^version: " | cut -d" " -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Helm Chart version: $VERSION" >> $GITHUB_STEP_SUMMARY

      - name: Helm Package PR
        if: ${{ "{{ github.event_name == 'pull_request' }}" }}
        run: helm package . --version=${{ "{{ steps.current_version.outputs.version }}" }}-pr.${{ "{{ github.event.pull_request.number }}" }}

      - name: Helm Push
        if: ${{ "{{ github.event_name != 'pull_request' }}" }}
        run: helm push ${{ "{{ github.event.repository.name }}" }}-${{ "{{ steps.current_version.outputs.version }}" }}.tgz  oci://p6m.jfrog.io/p6m-dev-docker

      - name: Helm Push PR
        if: ${{ "{{ github.event_name == 'pull_request' }}" }}
        run: helm push ${{ "{{ github.event.repository.name }}" }}-${{ "{{ steps.current_version.outputs.version }}" }}-pr.${{ "{{ github.event.pull_request.number }}" }}.tgz  oci://p6m.jfrog.io/p6m-dev-docker

      # TODO: Extract as custom action to p6m-dev
      # TODO: Make action more modular about appVersion and chart path
      # TODO: Remove dependency on pysemver.
      - name: Bump Chart Version
        run: |
          pip install semver
          CHART_VERSION=$(yq '.version' Chart.yaml)
          NEW_CHART_VERSION=$(pysemver bump patch $CHART_VERSION)
          x="$NEW_CHART_VERSION" yq --inplace '.version=strenv(x)' Chart.yaml
      ########

      - name: Commit and Push
        if: ${{ "{{ github.event_name != 'pull_request' }}" }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[skip ci] Bump Version"
          git push
