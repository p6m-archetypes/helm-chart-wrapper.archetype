{{ '{{- if .Values.externalSecrets.enabled }}' }}
{{ '{{ $storeName := printf "%s-certificates" .Release.Name }}' }}
{{ '{{ $storeConfig := merge .Values.externalSecrets.certificateStoreConfig .Values.externalSecrets.storeConfig }}' }}
{{ '{{- if eq .Values.p6m.cloud "azure" }}' }}
apiVersion: secrets.p6m.dev/v1alpha1
kind: AzureSecretStore
metadata:
  name: "{{ '{{ $storeName }}' }}"
spec:
  parameters:
    {{ '{{- $storeConfig | toYaml | nindent 4 }}' }}
{{ '{{- end }}' }}
{{ '{{- if eq .Values.p6m.cloud "aws" }}' }}
apiVersion: secrets.p6m.dev/v1alpha1
kind: AwsSecretStore
metadata:
  name: "{{ '{{ $storeName }}' }}"
spec:
  parameters:
    {{ '{{- $storeConfig | toYaml | nindent 4 }}' }}
{{ '{{- end }}' }}

# ExternalSecrets
{{ '{{- range .Values.externalSecrets.certificates }}' }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  labels:
    p6m.dev/shared: "false"
    {{ '{{- include "platform.labels" $ | nindent 4 }}' }}
  name: "{{ '{{ $.Release.Name }}' }}-{{ '{{ .target | default .name }}' }}"
spec:
  data:
    - secretKey: value
      remoteRef:
        key: "{{ '{{ .name }}' }}"
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: "{{ '{{ $storeName }}' }}"
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    name: "{{ '{{ .target | default .name }}' }}"
    {{ '{{- if eq (.format | default "pkcs12") "pkcs12" }}' }}
    data:
      tls.crt: {{ '"{{ "{{" }} .value | b64dec | pkcs12cert {{ "}}" }}"' }}
      tls.key: {{ '"{{ "{{" }} .value | b64dec | pkcs12key {{ "}}" }}"' }}
    {{ '{{- end }}' }}
    {{ '{{- if eq (.format | default "pkcs12") "pem" }}' }}
    data:
      tls.crt: "{{ '"{{ "{{" }} .value | filterPEM \"CERTIFICATE\" {{ "}}" }}"' }}"
      tls.key: "{{ '"{{ "{{" }} .value | filterPEM \"PRIVATE KEY\" {{ "}}" }}"' }}"
    {{ '{{- end }}' }}
{{ '{{- end }}' }}
{{ '{{- end }}' }}
